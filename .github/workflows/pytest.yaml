name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
  - cron: "0 5 * * *"

env:
  # See description in lint.yml
  depth: 100

jobs:
  pytest:
    strategy:
      matrix:
        os:
        - macos-latest
        - ubuntu-latest
        - windows-latest
        python-version:
        - "3.6"  # Earliest version supported by ixmp
        - "3.8"
        - "3.9"  # Latest release / latest supported by ixmp

        # For development versions of Python, compiled binary wheels are not
        # available for some dependencies, e.g. llvmlite, numba, numpy, and/or
        # pandas. Compiling these on the job runner requires a more elaborate
        # build environment, currently out of scope for the ixmp project.
        # - "3.10.0-alpha.1"  # Development version

        exclude:
        # See https://github.com/iiasa/ixmp/issues/360
        - os: windows-latest
          python-version: "3.6"

      fail-fast: false

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }}-py${{ matrix.python-version }}

    steps:
    - name: Cancel previous runs that have not completed
      uses: styfle/cancel-workflow-action@0.7.0
      with:
        access_token: ${{ github.token }}

    - uses: actions/checkout@v2
      with:
        fetch-depth: ${{ env.depth }}

    - name: Fetch tags (for setuptools-scm)
      run: git fetch --tags --depth=${{ env.depth }}

    - name: Cache GAMS installer, Python packages, and R packages
      uses: actions/cache@v2
      with:
        path: |
          gams
          ~/.cache/pip
          ~/Library/Caches/pip
          ~/appdata/local/pip/cache
          ${{ env.R_LIBS_USER }}
        key: ${{ matrix.os }}-gams${{ env.GAMS_VERSION }}-py${{ matrix.python-version }}
        restore-keys: |
          ${{ matrix.os }}-gams${{ env.GAMS_VERSION }}-
          ${{ matrix.os }}-

    - uses: iiasa/actions/setup-gams@main
      with:
        version: 25.1.1

    - uses: ts-graphviz/setup-graphviz@v1

    - uses: r-lib/actions/setup-r@master

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set RETICULATE_PYTHON
      # Use the environment variable set by the setup-python action, above.
      run: echo "RETICULATE_PYTHON=$pythonLocation" >> $GITHUB_ENV
      shell: bash

    - name: Use OpenJDK 14 (macOS only)
      # Using the default OpenJDK 1.8 on the macos-latest runner produces
      # "Abort trap: 6" when JPype1 starts the JVM
      if: ${{ startsWith(matrix.os, 'macos') }}
      uses: actions/setup-java@v1
      with:
        java-version: '14'

    - name: Upgrade pip, wheel, setuptools-scm
      run: python -m pip install --upgrade pip wheel setuptools-scm

    - name: Install Python package and dependencies
      run: pip install .[tests]

    - name: Install R package and dependencies
      run: |
        install.packages("remotes")
        remotes::install_cran(c("rcmdcheck", "IRkernel"))
        remotes::install_deps("rixmp", upgrade = "never", dependencies = TRUE)

        # commented: for debugging
        # print(reticulate::py_config())
        # reticulate::py_run_string("import os; print(os.environ)")

        # For R tutorial notebooks, run via the pytest suite: set up R kernel;
        # actually install the R package
        IRkernel::installspec()
        remotes::install_local(
          "rixmp",
          force = TRUE,
          INSTALL_opts = c("--no-multiarch"),
          )
      shell: Rscript {0}

    - name: Run test suite using pytest
      run: pytest ixmp -m "not performance" --verbose -rA --cov-report=xml --color=yes

    - name: Run R CMD check
      # Temporarily disabled: see https://github.com/iiasa/ixmp/issues/403
      if: false
      run: |
        rcmdcheck::rcmdcheck(
            "rixmp",
            args = c("--no-manual", "--as-cran", "--no-multiarch"),
            error_on = "warning",
            check_dir = "check"
        )
      shell: Rscript {0}

    - name: Test documentation build using Sphinx
      if: matrix.python-version != '3.6'
      run: make --directory=doc html

    - name: Upload test coverage to Codecov.io
      uses: codecov/codecov-action@v1
